[{"/Users/sonny/Documents/Programming/API Demo/v1/src/index.js":"1","/Users/sonny/Documents/Programming/API Demo/v1/src/App.js":"2","/Users/sonny/Documents/Programming/API Demo/v1/src/apiKeys.js":"3","/Users/sonny/Documents/Programming/API Demo/v1/src/Login.js":"4","/Users/sonny/Documents/Programming/API Demo/v1/src/Graph.js":"5","/Users/sonny/Documents/Programming/API Demo/v1/src/Users.js":"6","/Users/sonny/Documents/Programming/API Demo/v1/src/PageNotFound.js":"7","/Users/sonny/Documents/Programming/API Demo/v1/src/components/Otp.js":"8","/Users/sonny/Documents/Programming/API Demo/v1/src/components/Email.js":"9","/Users/sonny/Documents/Programming/API Demo/v1/src/components/GraphGenerator.js":"10"},{"size":196,"mtime":1610465909107,"results":"11","hashOfConfig":"12"},{"size":718,"mtime":1610540360153,"results":"13","hashOfConfig":"12"},{"size":123,"mtime":1610521213128,"results":"14","hashOfConfig":"12"},{"size":566,"mtime":1610540681927,"results":"15","hashOfConfig":"12"},{"size":1170,"mtime":1610542281575,"results":"16","hashOfConfig":"12"},{"size":2096,"mtime":1610541915494,"results":"17","hashOfConfig":"12"},{"size":122,"mtime":1610540124125,"results":"18","hashOfConfig":"12"},{"size":2064,"mtime":1610541481542,"results":"19","hashOfConfig":"12"},{"size":1591,"mtime":1610541147549,"results":"20","hashOfConfig":"12"},{"size":2199,"mtime":1610612372002,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1xvdizd",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"/Users/sonny/Documents/Programming/API Demo/v1/src/index.js",[],["47","48"],"/Users/sonny/Documents/Programming/API Demo/v1/src/App.js",[],"/Users/sonny/Documents/Programming/API Demo/v1/src/apiKeys.js",[],"/Users/sonny/Documents/Programming/API Demo/v1/src/Login.js",[],"/Users/sonny/Documents/Programming/API Demo/v1/src/Graph.js",["49"],"import React, {useEffect, useState} from 'react'\nimport {useParams} from 'react-router-dom';\nimport {API_KEY, API_KEYID} from './apiKeys';\nimport GraphGenerator from './components/GraphGenerator'\n\nfunction Graph() {\n\tconst {id} = useParams();\n\tconst [loading, setLoading] = useState(false);\n\tconst [data, setData] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst from = new Date(new Date().getTime() - (1000*60*60*8)).toISOString();\n\t\tconst to = new Date().toISOString();\n\n\t\tfetch(`https://records.gateway.senslabs.io/api/records/get?userId=${id}&from=${from}&to=${to}&key=HeartRate&key=BreathRate`, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json;charset=utf-8',\n\t\t\t\t'x-sens-api-key-id': API_KEYID,\n\t\t\t\t'x-sens-api-key': API_KEY,\n\t\t\t\t'Authorization': localStorage.getItem('demo-Access_Token'), \n\t\t\t} \n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(setData)\n\t\t\t.catch(console.log)\n\t\t\t.then(() => {\n\t\t\t\tsetLoading(false);\n\t\t})\n\t}, [])\n\n\treturn (\n\t\t<div className=\"outer-container\" style={{width: '80vw'}}>\n\t\t\t{\n\t\t\t\tloading ? 'Loading ... ' :\n\t\t\t\tdata.length ? <GraphGenerator graphData={data} /> : 'Processing ... '\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nexport default Graph\n","/Users/sonny/Documents/Programming/API Demo/v1/src/Users.js",["50"],"import React, { useState, useEffect } from 'react'\nimport {useHistory, Link} from 'react-router-dom';\nimport {API_KEY, API_KEYID} from './apiKeys';\n\nfunction Users() {\n\tconst [loading, setLoading] = useState(false);\n\tconst [users, setUsers] = useState([]);\n\tconst history = useHistory();\n\n\tuseEffect(() => {\n\t\tif(!localStorage.getItem('demo-Access_Token')) {\n      history.push('/login');\n\t\t} \n\t\tgetUsers();\n\t}, [])\n\n\tfunction getUsers(){\n\t\tsetLoading(true);\n\n\t\tfetch('https://console.gateway.senslabs.io/api/users/list?matcher=DEFAULT', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8',\n        'x-sens-api-key-id': API_KEYID,\n        'x-sens-api-key': API_KEY,\n        'Authorization': localStorage.getItem('demo-Access_Token'), \n      }     \n    })\n    .then(res => res.json())\n    .then(res => {\n      const filteredUsers = res.filter(user => new Date(user.DateOfBirth).getYear() > 70) //only for this demo\n      // console.log('filteredUsers: ', filteredUsers);\n      setUsers(filteredUsers);\n    })\n    .catch(console.log)\n    .then(() => {\n      setLoading(false);\n    })\n\t}\n\n\tconst row_style = {\n\t\tbackgroundColor: 'lightblue',\n\t\twidth: '50vw',\n\t\tmargin: '.25em',\n\t\tpadding: '.25em',\n\t\ttextDecoration: 'none',\n\t\tborderRadius: '.25em'\n\t}\n\n\tconst link_style = {\n\t\tbackgroundColor: 'aqua',\n\t\twidth: '10em',\n\t\ttextDecoration: 'none',\n\t\tcolor: 'black'\n\t}\n\n\tfunction generateRows(user){\n\t\treturn users.map(user => {\n\t\t\tconst firstName = user.Auth.FirstName;\n\t\t\tconst lastName = user.Auth.LastName;\n\t\t\tconst userId = user.UserId;\n\n\t\t\treturn (<div className=\"\" key={user.UserId} style={row_style}>\n\t\t\t\t<Link to={`/graph/${userId}`} target=\"_blank\" style={link_style}>\n\t\t\t\t\t<div className=\"user-row\">\n\t\t\t\t\t\t<span>{firstName} {lastName}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</Link>\n\t\t\t</div>)\n\t\t})\n\t}\n\n\tuseEffect(() => {\n\t\tif(users.length){\n\t\t\tconsole.log('users: ', users[0])\n\t\t}\n\t}, [users])\n\n\treturn (\n\t\t<div className=\"outer-container\">\n\t\t\t{ loading ? 'Loading ... ' : users.length ? generateRows(users) : 'awaiting ... ' }\n\t\t</div>\n\t)\n}\n\nexport default Users\n","/Users/sonny/Documents/Programming/API Demo/v1/src/PageNotFound.js",[],"/Users/sonny/Documents/Programming/API Demo/v1/src/components/Otp.js",[],"/Users/sonny/Documents/Programming/API Demo/v1/src/components/Email.js",["51"],"import React, { useState, useEffect } from 'react'\nimport {API_KEY, API_KEYID} from '../apiKeys';\n\nfunction Email({setEmail, setDisplayOTPInput}) {\n\tconst [emailInput, setEmailInput] = useState('');\n\tconst [loading, setLoading] = useState(false);\n\tconst [receivedSID, setReceivedSID] = useState(false);\n\n\tuseEffect(() => {\n\t\tsetEmailInput('');\n\t}, []);\n\n\tconst handleChange = e => {\n\t\tsetEmailInput(e.target.value);\n\t}\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\t\t\n\t\tif(emailInput){\n\t\t\tsetLoading(true);\n\t\t\tsetEmail(emailInput);\n\n\t\t\tfetch('https://console.gateway.senslabs.io/api/otp/request', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json;charset=utf-8',\n\t\t\t\t\t'x-sens-api-key-id': API_KEYID,\n\t\t\t\t\t'x-sens-api-key': API_KEY\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tMedium: 'Email',\n\t\t\t\t\tMediumValue: emailInput\n\t\t\t\t})\n\t\t\t})\n\t\t\t.then(res => {\n\t\t\t\tconsole.log('status: ', res.status)\n\t\t\t\t// setSIDStatus(res.status);\n\t\t\t\treturn res.json()\n\t\t\t})\n\t\t\t.then(res => {\n\t\t\t\tconsole.log(res.SessionId);\n\t\t\t\t// setSessionId(res.SessionId);\n\t\t\t\tsetReceivedSID(true);\n\t\t\t\tlocalStorage.setItem('demo-SID', res.SessionId)\n\t\t\t})\n\t\t\t.catch(console.log)\n\t\t\t.then(() => {\n\t\t\t\tsetLoading(false)\n\t\t\t})\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tif(receivedSID){\n\t\t\tsetDisplayOTPInput(true);\n\t\t}\n\t}, [receivedSID])\n\n\treturn (\n\t\t<div>\n\t\t\t{\n\t\t\t\tloading ? 'Loading ... ' :\n\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t<input type=\"text\" value={emailInput} placeholder=\"Enter your email ID\" onChange={handleChange}/>\n\t\t\t\t\t<button>Submit</button>\n\t\t\t\t</form>\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nexport default Email\n","/Users/sonny/Documents/Programming/API Demo/v1/src/components/GraphGenerator.js",["52"],"import React, {useEffect} from 'react'\nimport {Line} from 'react-chartjs-2';\n\nfunction GraphGenerator({graphData}) {\n\n\tuseEffect(() => {\n\t\tconsole.log('graphData: ', graphData);\n\t}, []);\n\n\tconst data = {datasets: [getHRData(graphData)]};\n\n\tconst options = {\n\t\tresponsive: true,\n\t\taspectRatio: 2,\n\t\ttitle: {\n\t\t\tdisplay: false,\n\t\t\ttext: 'Heart Rate'\n\t\t},\n\t\tlegend: {\n\t\t\tdisplay: true,\n\t\t\tposition: 'top',\n\t\t\tlabels: {\n\t\t\t\tusePointStyle: true,\n\t\t\t},\n\t\t},\n\t\ttooltips: {\n      mode: 'index',\n\t\t\tintersect: false\n    },\n\t\tplugins: {\n      datalabels: {\n        display: false\n\t\t\t},\n\t\t},\n\t\telements: {\n      line: {\n        tension: .25\n\t\t\t},\n\t\t\tpoint:{\n\t\t\t\tradius: 0,\n\t\t\t\thoverRadius: 5,\n\t\t\t}\n\t\t},\n\t\tscales: {\n\t\t\tyAxes: [\n\t\t\t\t {\n\t\t\t\t\tscaleLabel: {\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\tlabelString: 'beats/min',\n\t\t\t\t\t},\n\t\t\t\t\tticks: {\n\t\t\t\t\t\tbeginAtZero: true,\n\t\t\t\t\t},\n\t\t\t\t\tgridLines: {\n\t\t\t\t\t\tdrawOnChartArea: false,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\txAxes: [\n\t\t\t\t{\n\t\t\t\t\tscaleLabel: {\n\t\t\t\t\t\tdisplay: false,\n\t\t\t\t\t\tlabelString: 'Time'\n\t\t\t\t\t},\n\t\t\t\t\tticks: {\n\t\t\t\t\t\tmaxTicksLimit: 20,\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t},\n\t\t\t\t\tgridLines: {\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\tdrawOnChartArea: false,\n\t\t\t\t\t},\n\t\t\t\t\ttype: \"time\",\n\t\t\t\t\ttime: {\n\t\t\t\t\t\tdisplayFormats: {\n\t\t\t\t\t\t\tminute: \"h:mm a\"\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n\n\treturn (<Line data={data}  options={options} height={null} width={null}/>)\n}\n\nexport default GraphGenerator\n\nfunction getHRData(data){\n\tconst HRValues = getValues(data, 'HeartRate');\n\tconst HRTimes = getTimes(data);\n\n\treturn  {\n\t\ttype: 'line',\n\t\tlabel: 'Heart rate',\n\t\tdata: mergeData(HRTimes, HRValues), //{time: 21:00, value: 55}\n\t\tborderColor: ['rgb(255, 167, 167)'],\n\t\tbackgroundColor: [\"rgba(0,0,0,0\"],\n\t\tborderWidth: 2,\n\t\tspanGaps: false\n\t}\n}\n\nfunction mergeData(times, data){\n\tconst arr = [];\n\tfor(let i = 0; i < times.length; i++){\n\t\tconst obj = {\n\t\t\tx: times[i],\n\t\t\ty: data[i]\n\t\t}\n\t\tarr.push(obj);\n\t}\n\treturn arr;\n}\n\nfunction getValues(data, key){\n\tconst arr = [];\n\n\tfor(const item of data){\n\t\tif(item[key] === -1){\n\t\t\tarr.push(NaN)\n\t\t} else {\n\t\t\tarr.push(item[key])\n\t\t}\n\t}\n\n\treturn arr;\n}\n\nfunction getTimes(data){\n\tconst arr = [];\n\n\tfor(const item of data){\n\t\tarr.push(new Date(item['Timestamp']))\n\t}\n\n\treturn arr;\n}",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":30,"column":5,"nodeType":"59","endLine":30,"endColumn":7,"suggestions":"60"},{"ruleId":"57","severity":1,"message":"61","line":15,"column":5,"nodeType":"59","endLine":15,"endColumn":7,"suggestions":"62"},{"ruleId":"57","severity":1,"message":"63","line":58,"column":5,"nodeType":"59","endLine":58,"endColumn":18,"suggestions":"64"},{"ruleId":"57","severity":1,"message":"65","line":8,"column":5,"nodeType":"59","endLine":8,"endColumn":7,"suggestions":"66"},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["69"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["70"],"React Hook useEffect has a missing dependency: 'setDisplayOTPInput'. Either include it or remove the dependency array. If 'setDisplayOTPInput' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["71"],"React Hook useEffect has a missing dependency: 'graphData'. Either include it or remove the dependency array.",["72"],"no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},"Update the dependencies array to be: [id]",{"range":"81","text":"82"},"Update the dependencies array to be: [history]",{"range":"83","text":"84"},"Update the dependencies array to be: [receivedSID, setDisplayOTPInput]",{"range":"85","text":"86"},"Update the dependencies array to be: [graphData]",{"range":"87","text":"88"},[944,946],"[id]",[412,414],"[history]",[1301,1314],"[receivedSID, setDisplayOTPInput]",[182,184],"[graphData]"]